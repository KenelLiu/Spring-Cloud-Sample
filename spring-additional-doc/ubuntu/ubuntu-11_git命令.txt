https://www.runoob.com/git/git-tutorial.html
远程:
  1.列出所有远程主分支
     git remote

   2.更新远程主分支[origin] 并整理分支
       git remote update origin --prune

    3.列出远程分支
        git branch -r
        git branch -a
   
    4.查看本地分支和远程分支对应关系
        git branch -vv

    5.新建本地分支gpf 与 远程gpf相关联
        git checkout -b gpf origin/gpf

本地:
    1.创建分支
       git branch 'new branch'		

     2. 查看本地分支[名称带*号是当前分支]
        git branch 

     3.查看远程分支
         git branch -a
  
     4.切换分支
         git checkout  'new branch'
	
     5.删除本地分支
         git branch -d branch_name

      6.将代码暂存在本地
         git add .
         git add file1 file2
         git add config/*
         git add  src/*.java
 
       7.将代码提交到本地
         git commit -m "Commit message"

       8.将代码推送到远程指定分支
          git push origin <branch_name>

       9.如果出行hint,远程未更新。强制本地分支覆盖远程分支
          git push origin <branch_name> -f
   
       10.从远程指定分支上拉取代码
           git clone -b <branch_name>  <ssh地或者http地址>    

       11.将文件退回到unstage区【回退暂存区里文件】
            git reset HEAD

       12.删除暂存区和分支上的文件，同时工作区也不需要
             git rm file_path
    
        13.删除暂存区和分支上的文件,但工作区需要使用,不被版本控制
             git rm --cached file_path              

        14.git pull 命令用于从远程获取代码并合并本地的版本
            git pull <远程主机名> <远程分支名>:<本地分支名>
  
         15.更新操作
              git pull
              git pull origin

          16.将远程主机 origin 的 master 分支拉取过来，与本地的 brantest 分支合并
              git pull origin master:brantest

           17.如果远程分支是与当前分支合并，则冒号后面的部分可以省略。
	git pull origin master