Without modifying the final sequence, I want to:
    get notified of / execute additional behavior (sometimes referred to as "side-effects") on:
    emissions: doOnNext
    completion: Flux#doOnComplete, Mono#doOnSuccess (includes the result, if any)
    error termination: doOnError
    cancellation: doOnCancel
    "start" of the sequence: doFirst

this is tied to Publisher#subscribe(Subscriber)
    post-subscription : doOnSubscribe
    as in Subscription acknowledgment after subscribe

this is tied to Subscriber#onSubscribe(Subscription)
    request: doOnRequest
    completion or error: doOnTerminate (Mono version includes the result, if any)
    but after it has been propagated downstream: doAfterTerminate

any type of signal, represented as a Signal: Flux#doOnEach

any terminating condition (complete, error, cancel): doFinally

log what happens internally: log
    I want to know of all events:
    each represented as Signal object:
        in a callback outside the sequence: doOnEach

instead of the original onNext emissions: materialize
and get back to the onNexts: dematerialize

as a line in a log: log