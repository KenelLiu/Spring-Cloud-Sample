1.API Components
   The API consists of the following components that are required to be provided by Reactive Stream implementations:
    a.Publisher
    b.Subscriber
    c.Subscription
    d.Processor

    A Publisher is a provider of a potentially unbounded number of sequenced elements, publishing them according to
      the demand received from its Subscriber(s)
    In response to a call to Publisher.subscribe(Subscriber) the possible invocation sequences for methods on the
      Subscriber are given by the following protocol:
            onSubscribe onNext* (onError | onComplete)?
    This means that onSubscribe is always signalled,
    followed by a possibly unbounded number of onNext signals (as requested by Subscriber)
    followed by an onError signal if there is a failure,
    or an onComplete signal when no more elements are available—all as long as the Subscription is not cancelled.

NOTES
    The specifications below use binding words in capital letters from https://www.ietf.org/rfc/rfc2119.txt


Signal: As a noun: one of the onSubscribe, onNext, onComplete, onError, request(n) or cancel methods.As a verb: calling/invoking a signal.

Demand: As a noun, the aggregated number of elements requested by a Subscriber which is yet to be delivered (fulfilled) by the Publisher
        As a verb, the act of request-ing more elements.

Synchronous(ly)： Executes on the calling Thread.

Return normally： Only ever returns a value of the declared type to the caller. The only legal way to signal failure to
                  a Subscriber is via the onError method.

Responsivity:   Readiness/ability to respond. In this document used to indicate that the different components
                should not impair each others ability to respond.

Non-obstructing（无阻碍）:Quality describing a method which is as quick to execute as possible—on the calling thread. This means,
            for example, avoids heavy computations and other things that would stall（阻碍，停止） the caller´s thread of
            execution.

Terminal state: For a Publisher: When onComplete or onError has been signalled. For a Subscriber: When an onComplete
                or onError has been received.

NOP: Execution that has no detectable effect to the calling thread, and can as such safely be called any number of times.

Serial(ly)：In the context of a Signal, non-overlapping. In the context of the JVM, calls to methods on an object are
            if and only if there is a happens-before relationship between those calls(implying also that the calls do not
            overlap).When the calls are performed asynchronously, coordination to establish the happens-before relationship
            is to be implemented using techniques such as, but not limited to, atomics, monitors, or locks.

Thread-safe:Can be safely invoked synchronously, or asychronously, without requiring external synchronization to ensure
            program correctness(正确).